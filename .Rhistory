library(dplyr)
library(foreign)
library(ggplot2)
library(haven)
library(lmtest)
library(pander)
library(plm)
library(quanteda)
library(readtext)
library(readxl)
library(RColorBrewer)
library(rworldmap)
library(stargazer)
library(stringr)
library(syuzhet)
library(texreg)
library(tidyr)
library(zip)
library(tibble)
#install.packages("tidytext")
#install.packages("tidyverse")
library(tidytext)
library(tidyverse)
library(glue)
library(remotes)
install_github("EmilHvitfeldt/textdata")
install_github("juliasilge/tidytext")
par(mfrow=c(2,1), mar=c(4, 4.1, 4.1, 2.1))
ggplot(sentiment_plotp, aes(x=as.numeric(Year), y=n))+
geom_smooth(color="red")+
theme_minimal()+
ylab("Frequency of Positive Words in UN speeches")+
xlab("Year")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
#negative sentiment - bing
sentiment_plotn <-
sent_words_lim %>%
inner_join(get_sentiments("bing")) %>%
filter(sentiment == "negative") %>%
count(Year, MergeCountry, sentiment)
sentiment_plotp <-
sent_tfidf %>%
inner_join(get_sentiments("bing")) %>%
filter(sentiment == "positive") %>%
count(Year, MergeCountry, sentiment)
ggplot(sentiment_plotp, aes(x=as.numeric(Year), y=n))+
geom_smooth(color="red")+
theme_minimal()+
ylab("Frequency of Positive Words in UN speeches")+
xlab("Year")
ggplot(sentiment_plotn, aes(x=Year, y=n))+
geom_smooth(color="blue")+
geom_point(color="red")+
theme_minimal()+
ylab("Frequency of Negative Words in UN speeches")+
xlab("Year")
ggplot(sentiment_plotp, aes(x=as.numeric(Year), y=n))+
geom_smooth(color="red")+
geom_smooth(data=sentiment_plotn, color="blue")
#negative sentiment - bing
sentiment_plotn <-
sent_words_lim %>%
inner_join(get_sentiments("bing")) %>%
filter(sentiment == "negative") %>%
count(Year, MergeCountry, sentiment)
sentiment_plotp <-
sent_words_lim %>%
inner_join(get_sentiments("bing")) %>%
filter(sentiment == "positive") %>%
count(Year, MergeCountry, sentiment)
par(mfrow=c(2,1), mar=c(4, 4.1, 4.1, 2.1))
ggplot(sentiment_plotp, aes(x=as.numeric(Year), y=n))+
geom_smooth(color="red")+
theme_minimal()+
ylab("Frequency of Positive Words in UN speeches")+
xlab("Year")
ggplot(sentiment_plotn, aes(x=Year, y=n))+
geom_smooth(color="blue")+
geom_point(color="red")+
theme_minimal()+
ylab("Frequency of Negative Words in UN speeches")+
xlab("Year")
##afinn
count_UNGDsentiment_afinn <- sent_words_lim %>%
inner_join(get_sentiments("afinn")) %>%
group_by(MergeCountry, Year) %>%
summarise(sentiment = mean(value)) %>%
mutate(method = "AFINN")
count_UNGDsentiment_afinn
#count sentiment dictionary nrc
count_UNGDsentiment_nrc <- sent_words_lim %>%
inner_join(get_sentiments("nrc")) %>%
group_by(MergeCountry, Year) %>%
count (Year, MergeCountry, sentiment) %>%
mutate(method = "nrc")
count_UNGDsentiment_afinn
count_UNGDsentiment_nrc
##bing
bing_ex <- sent_words_lim %>%
filter(MergeCountry == "USA") %>%
inner_join(get_sentiments("bing")) %>%
group_by(MergeCountry) %>%
mutate(method = "BING")
bing_ex
##nrc
nrc_anger <- get_sentiments("nrc") %>%
filter(sentiment == "anger")
sent_words_lim %>%
filter(MergeCountry == "USA") %>%
inner_join(nrc_anger) %>%
count(word, sort = TRUE)
head(merge_HRdict_counts)
colnames(count_UNGDsentiment_bing)[colnames(count_UNGDsentiment_bing)=="sentiment"] <- "sentiment_bing"
colnames(count_UNGDsentiment_bing)[colnames(count_UNGDsentiment_bing)=="n"] <- "n_bing"
head(count_UNGDsentiment_bing)
merge_sentiment_counts1 <- merge(merge_HRdict_counts, count_UNGDsentiment_bing, by = c('MergeCountry','Year'), all=TRUE)
head(merge_sentiment_counts1)
str(sent_words_lim)
##afinn
head(count_UNGDsentiment_afinn)
colnames(count_UNGDsentiment_afinn)[colnames(count_UNGDsentiment_afinn)=="method"] <- "method_afinn"
colnames(count_UNGDsentiment_afinn)[colnames(count_UNGDsentiment_afinn)=="n"] <- "n_afinn"
colnames(count_UNGDsentiment_afinn)[colnames(count_UNGDsentiment_afinn)=="sentiment"] <- "sentiment_afinn"
merge_sentiment_counts2 <- merge(merge_HRdict_counts, count_UNGDsentiment_afinn, by = c('MergeCountry','Year'), all=TRUE)
head(merge_sentiment_counts2)
##nrc
head(count_UNGDsentiment_nrc)
colnames(count_UNGDsentiment_nrc)[colnames(count_UNGDsentiment_nrc)=="method"] <- "method_nrc"
colnames(count_UNGDsentiment_nrc)[colnames(count_UNGDsentiment_nrc)=="n"] <- "n_nrc"
colnames(count_UNGDsentiment_nrc)[colnames(count_UNGDsentiment_nrc)=="sentiment"] <- "sentiment_nrc"
merge_sentiment_all <- merge(merge_HRdict_counts, count_UNGDsentiment_nrc, by = c('MergeCountry','Year'), all=TRUE)
head(merge_sentiment_all)
merge_sentiment3<- merge(merge_HRdict_counts, count_UNGDsentiment_nrc, by = c('MergeCountry','Year'), all=TRUE)
head(merge_sentiment_all)
summary(merge_sentiment3$PTS_S_var)
ggplot(merge_sentiment_counts1, aes(x=as.numeric(PTS_S_var), y=n_bing))+
geom_jitter(color="red")+
theme_minimal()+
ylab("Frequency of Sentiment Words in UN speeches")+
xlab("Change in PTS")
ggplot(merge_sentiment_counts2, aes(x=as.numeric(PTS_S_var), y=value_afinn))+
geom_line(color="red")+
theme_minimal()+
ylab("Value of Sentiment Words in UN speeches")+
xlab("Change in PTS")
ggplot(merge_sentiment_counts1, aes(x=as.numeric(PTS_S_var), y=n_bing))+
geom_jitter(color="red")+
theme_minimal()+
ylab("Frequency of Sentiment Words in UN speeches")+
xlab("Change in PTS")
ggplot(merge_sentiment_counts2, aes(x=as.numeric(PTS_S_var), y=value_afinn))+
geom_line(color="red")+
theme_minimal()+
ylab("Value of Sentiment Words in UN speeches")+
xlab("Change in PTS")
ggplot(merge_sentiment_counts2, aes(x=as.numeric(PTS_S_var), y=sentiment_afinn))+
geom_line(color="red")+
theme_minimal()+
ylab("Value of Sentiment Words in UN speeches")+
xlab("Change in PTS")
ggplot(merge_sentiment_counts2, aes(x=as.numeric(PTS_S_var), y=sentiment_afinn))+
geom_jitter(color="red")+
theme_minimal()+
ylab("Value of Sentiment Words in UN speeches")+
xlab("Change in PTS")
ggplot(merge_sentiment_counts2, aes(x=as.numeric(PTS_S_var), y=sentiment_afinn))+
geom_bar(color="red")+
theme_minimal()+
ylab("Value of Sentiment Words in UN speeches")+
xlab("Change in PTS")
ggplot(merge_sentiment_counts2, aes(x=as.numeric(PTS_S_var), y=sentiment_afinn))+
geom_boxplot(color="red")+
theme_minimal()+
ylab("Value of Sentiment Words in UN speeches")+
xlab("Change in PTS")
ggplot(merge_sentiment_counts2, aes(x=as.numeric(PTS_S_var), y=sentiment_afinn))+
geom_point(color="red")+
theme_minimal()+
ylab("Value of Sentiment Words in UN speeches")+
xlab("Change in PTS")
ggplot(merge_sentiment_counts2, aes(x=as.numeric(PTS_S_var), y=sentiment_afinn))+
geom_jitter(color="red")+
theme_minimal()+
ylab("Value of Sentiment Words in UN speeches")+
xlab("Change in PTS")
?ggplot
###create dummies for PTS
head(merge_sentiment_counts1)
merge_sentiment_all$PTS_S_dummy <- factor(merge_sentiment_all$PTS_S)
is.factor(merge_sentiment_all$PTS_S_dummy)
merge_sentiment_all$PTS_A_dummy <- factor(merge_sentiment_all$PTS_A)
is.factor(merge_sentiment_all$PTS_A_dummy)
merge_sentiment_all$PTS_H_dummy <- factor(merge_sentiment_all$PTS_H)
is.factor(merge_sentiment_all$PTS_H_dummy)
###packages
install.packages ("plm")
install.packages("plm")
library(plm)
###positive bing
Modelbing_S_pos <- plm (n_bing ~ PTS_S_dummy + PTS_S_var + PTS_S_dummy*PTS_S_var, data = subset(merge_sentiment_counts1, sentiment_bing == "positive"), effect = "twoways", model = "within")
###create dummies for PTS
head(merge_sentiment_counts1)
merge_sentiment_counts1$PTS_A_dummy <- factor(merge_sentiment_counts1$PTS_A)
is.factor(merge_sentiment_counts1$PTS_A_dummy)
merge_sentiment_counts2$PTS_A_dummy <- factor(merge_sentiment_counts2$PTS_A)
is.factor(merge_sentiment_counts2$PTS_A_dummy)
merge_sentiment_counts3$PTS_A_dummy <- factor(merge_sentiment_counts3$PTS_H)
merge_sentiment_counts3$PTS_A_dummy <- factor(merge_sentiment_counts3$PTS_A)
merge_sentiment_counts3<- merge(merge_HRdict_counts, count_UNGDsentiment_nrc, by = c('MergeCountry','Year'), all=TRUE)
head(merge_sentiment_counts3)
merge_sentiment_counts3$PTS_A_dummy <- factor(merge_sentiment_counts3$PTS_A)
is.factor(merge_sentiment_counts3$PTS_A_dummy)
Modelbing_A_pos <- plm (n_bing ~ PTS_A_dummy + PTS_A_var + PTS_A_dummy*PTS_A_var, data = subset(merge_sentiment_counts1, sentiment_bing == "positive"), effect = "twoways", model = "within")
screenreg(Modelbing_A_pos)
Modelbing_A_pos <- plm (n_bing ~ PTS_A_dummy + PTS_A_var + PTS_A_dummy*PTS_A_var, data = subset(merge_sentiment_counts1, sentiment_bing == "positive"), na.action = na.exclude, effect = "twoways", model = "within")
screenreg(Modelbing_A_pos)
?coeftest
coeftest(Modelbing_A_pos, vcovHC(model, type = 'HC0', cluster = 'Country'))
coeftest(Modelbing_A_pos, vcovHC(Modelbing_A_pos, type = 'HC0', cluster = 'Country'))
coeftest(Modelbing_A_pos, vcovHC(Modelbing_A_pos, type = 'HC0', cluster = 'group'))
coeftest(Modelbing_A_pos, vcovHC(Modelbing_A_pos, type = 'HC0', cluster = "MergeCountry"))
showreg(Modelbing_A_pos,
robust = FALSE,
cluster1 = "MergeCountry",
output = c("text")[1], output.fun = NULL,
package = getOption("showreg.package")[1], ...)
install.packages("texreg")
install.packages("texreg")
library(texreg)
showreg(Modelbing_A_pos,
robust = FALSE,
cluster1 = "MergeCountry",
output = c("text")[1], output.fun = NULL)
texreg(Modelbing_A_pos,
robust = FALSE,
cluster1 = "MergeCountry",
output = c("text")[1], output.fun = NULL)
texreg(Modelbing_A_pos,
robust = FALSE,
cluster1 = "MergeCountry")
screenreg(Modelbing_A_pos,
robust = FALSE,
cluster1 = "MergeCountry")
screenreg(Modelbing_A_pos,
robust = FALSE,
cluster2 = "MergeCountry")
screenreg(Modelbing_A_pos,
robust = FALSE,
cluster1 = "MergeCountry")
screenreg(Modelbing_A_pos)
coeftest(Modelbing_A_pos, vcovHC(Modelbing_A_pos, type = 'HC0', cluster = "MergeCountry"))
coeftest(Modelbing_A_pos, vcovHC(Modelbing_A_pos, type = 'HC0', cluster = "group"))
View(merge_sentiment_counts3)
Modelbing_A_pos <- plm (n_bing ~ PTS_A_dummy + PTS_A_var + PTS_A_dummy*PTS_A_var, data = subset(merge_sentiment_counts1, sentiment_bing == "positive"), na.action = na.exclude, effect = "twoways", model = "within")
clx(Modelbing_A_pos, dfcw, cluster)
install.packages("ivpack")
library(ivpack)
library(ivpack)
clx(Modelbing_A_pos, dfcw, cluster)
clx(Modelbing_A_pos, dfcw, cluster)
clx(Modelbing_A_pos, cluster)
clx(Modelbing_A_pos, cluster)
screenreg(Modelbing_A_pos)
clx(Modelbing_A_pos, cluster1)
?clx
clx(Modelbing_A_pos, cluster = "MergeCountry")
Modelbing_A_pos <- plm (n_bing ~ PTS_A_dummy + PTS_A_var + PTS_A_dummy*PTS_A_var, data = subset(merge_sentiment_counts1, sentiment_bing == "positive"), na.action = na.exclude, effect = "twoways", model = "within")
screenreg(Modelbing_A_pos)
Modelbing_A_neg <- plm (n_bing ~ PTS_A_dummy + PTS_A_var + PTS_A_dummy*PTS_A_var, data = subset(merge_sentiment_counts1, sentiment_bing == "negative"), effect = "twoways", model = "within")
screenreg(Modelbing_A_neg)
Modelbing_A <- lm (n_bing ~ PTS_A_dummy + PTS_A_var + PTS_A_dummy*PTS_A_var, data = merge_sentiment_counts1)
screenreg(Modelbing_A)
Modelbing_A_neg <- plm (n_bing ~ PTS_A_dummy + PTS_A_var + PTS_A_dummy*PTS_A_var, data = subset(merge_sentiment_counts1, sentiment_bing == "negative"), na.action = na.exclude, effect = "twoways", model = "within")
screenreg(Modelbing_A_neg)
Modelbing_A <- plm (n_bing ~ PTS_A_dummy + PTS_A_var + PTS_A_dummy*PTS_A_var, data = merge_sentiment_counts1, na.action = na.exclude, effect = "twoways", model = "within)
Modelbing_A <- plm (n_bing ~ PTS_A_dummy + PTS_A_var + PTS_A_dummy*PTS_A_var, data = merge_sentiment_counts1, na.action = na.exclude, effect = "twoways", model = "within")
Modelbing_A <- plm (n_bing ~ PTS_A_dummy + PTS_A_var + PTS_A_dummy*PTS_A_var, data = merge_sentiment_counts1, na.action = na.exclude, effect = "twoways", model = "within")
Modelbing_A <- plm (n_bing ~ PTS_A_dummy + PTS_A_var + PTS_A_dummy*PTS_A_var, na.action = na.exclude, data = merge_sentiment_counts1, effect = "twoways", model = "within")
Modelbing_A <- lm (n_bing ~ PTS_A_dummy + PTS_A_var + PTS_A_dummy*PTS_A_var, na.action = na.exclude, data = merge_sentiment_counts1)
screenreg(Modelbing_A)
head(merge_sentiment_counts2,20)
summary(merge_sentiment_counts2$sentiment_afinn)
Modelafinn_A <- plm (sentiment_afinn ~ PTS_A_dummy + PTS_A_var + PTS_A_dummy*PTS_A_var, data = merge_sentiment_counts2, na.action = na.exclude, effect = "twoways", model = "within")
screenreg(Modelafinn_A)
head(merge_sentiment_all$sentiment_nrc, 20)
Modelnrc_S <- plm (n_nrc ~ PTS_S_dummy + PTS_S_var + PTS_S_dummy*PTS_S_var, data = subset(merge_sentiment_all, sentiment_nrc == "anger"), na.action = na.exclude, effect = "twoways", model = "within")
Modelnrc_anger <- plm (n_nrc ~ PTS_A_dummy + PTS_A_var + PTS_A_dummy*PTS_A_var, data = subset(merge_sentiment_all, sentiment_nrc == "anger"), na.action = na.exclude, effect = "twoways", model = "within")
screenreg(Modelnrc_anger)
Modelnrc_anger <- plm (n_nrc ~ PTS_A_dummy + PTS_A_var + PTS_A_dummy*PTS_A_var, data = subset(merge_sentiment_counts3, sentiment_nrc == "anger"), na.action = na.exclude, effect = "twoways", model = "within")
screenreg(Modelnrc_anger)
Modelnrc_A_disgust <- plm (n_nrc ~ PTS_A_dummy + PTS_A_var + PTS_A_dummy*PTS_A_var, data = subset(merge_sentiment_counts3, sentiment_nrc == "disgust"), effect = "twoways", model = "within")
screenreg(Modelnrc_S_disgust)
screenreg(Modelnrc_A_disgust)
Modelnrc_A_disgust <- plm (n_nrc ~ PTS_A_dummy + PTS_A_var + PTS_A_dummy*PTS_A_var, data = subset(merge_sentiment_counts3, sentiment_nrc == "disgust"), na.action = na.exclude, effect = "twoways", model = "within")
screenreg(Modelnrc_A_disgust)
Modelnrc_A_sadness <- plm (n_nrc ~ PTS_A_dummy + PTS_A_var + PTS_A_dummy*PTS_A_var, data = subset(merge_sentiment_counts3, sentiment_nrc == "sadness"), na.action = na.exclude, effect = "twoways", model = "within")
screenreg(Modelnrc_A_sadness)
##ANGER
head(merge_sentiment_all$sentiment_nrc, 20)
Modelnrc_A_fear <- plm (n_nrc ~ PTS_A_dummy + PTS_A_var + PTS_A_dummy*PTS_A_var, data = subset(merge_sentiment_counts3, sentiment_nrc == "fear"), na.action = na.exclude, effect = "twoways", model = "within")
screenreg(Modelnrc_A_fear)
screenreg(Modelnrc_A_negative)
Modelnrc_A_negative <- plm (n_nrc ~ PTS_A_dummy + PTS_A_var + PTS_A_dummy*PTS_A_var, data = subset(merge_sentiment_counts3, sentiment_nrc == "negative"), na.action = na.exclude, effect = "twoways", model = "within")
screenreg(Modelnrc_A_negative)
#positive categories
Modelnrc_A_positive <- plm (n_nrc ~ PTS_A_dummy + PTS_A_var + PTS_A_dummy*PTS_A_var, data = subset(merge_sentiment_counts3, sentiment_nrc == "positive"), na.action = na.exclude, effect = "twoways", model = "within")
screenreg(Modelnrc_A_)
screenreg(Modelnrc_A_positive)
##ANGER
head(merge_sentiment_all$sentiment_nrc, 20)
screenreg(Modelnrc_A_anticip)
Modelnrc_A_anticip <- plm (n_nrc ~ PTS_A_dummy + PTS_A_var + PTS_A_dummy*PTS_A_var, data = subset(merge_sentiment_counts3, sentiment_nrc == "anticipation"), na.action = na.exclude, effect = "twoways", model = "within")
screenreg(Modelnrc_A_anticip)
Modelnrc_A_trust <- plm (n_nrc ~ PTS_A_dummy + PTS_A_var + PTS_A_dummy*PTS_A_var, data = subset(merge_sentiment_counts3, sentiment_nrc == "trust"), na.action = na.exclude, effect = "twoways", model = "within")
screenreg(Modelnrc_A_trust)
Modelnrc_A_surprise <- plm (n_nrc ~ PTS_A_dummy + PTS_A_var + PTS_A_dummy*PTS_A_var, data = subset(merge_sentiment_counts3, sentiment_nrc == "surprise"), na.action = na.exclude, effect = "twoways", model = "within")
screenreg(Modelnrc_A_surprise)
Modelnrc_A_joy <- plm (n_nrc ~ PTS_A_dummy + PTS_A_var + PTS_A_dummy*PTS_A_var, data = subset(merge_sentiment_counts3, sentiment_nrc == "joy"), na.action = na.exclude, effect = "twoways", model = "within")
screenreg(Modelnrc_A_joy)
summary(merge_sentiment_counts3$sentiment_nrc)
merge_sentiment_counts1$score <- merge_sentiment_counts1$sentiment_bing == "positive" - merge_sentiment_counts1$sentiment_bing == "negative"
merge_sentiment_counts1$score <- as.numeric(merge_sentiment_counts1$sentiment_bing == "positive") - as.numeric(merge_sentiment_counts1$sentiment_bing == "negative")
head(merge_sentiment_counts1)
?count
merge_sentiment_counts1$posbing <- subset(merge_sentiment_counts1$n_bing[merge_sentiment_counts1$sentiment_bing == "positive"])
merge_sentiment_counts1$posbing <- select(merge_sentiment_counts1$n_bing[merge_sentiment_counts1$sentiment_bing == "positive"])
?subset
merge_sentiment_counts1$posbing <- select(merge_sentiment_counts1$n_bing, merge_sentiment_counts1$sentiment_bing == "positive")
?textstat_keyness
twdfm <- dfm(merge_sentiment_counts1, groups=c("screen_name"), verbose=TRUE)
twdfm <- dfm(sent_words, groups=c("screen_name"), verbose=TRUE)
sentcorpus <- corpus(sent_words)
stargazer(Modelbing_A_pos, Modelbing_A_neg, Modelafinn_A,
align=TRUE,
type = 'text',
covariate.labels = c("a","s","d","f","g","h","j","k"),
column.sep.width = "10pt",
title= "Table 2. Panel regression - Sentiment Analysis",
dep.var.labels = "sentiment")
screenreg(Modelnrc_anger)
screenreg(Modelnrc_A_disgust)
screenreg(Modelnrc_A_sadness)
screenreg(Modelnrc_A_fear)
screenreg(Modelnrc_A_positive)
screenreg(Modelnrc_A_anticip)
screenreg(Modelnrc_A_trust)
screenreg(Modelnrc_A_joy)
screenreg(Modelnrc_A_surprise)
screenreg(Modelnrc_A_fear)
screenreg(Modelnrc_A_disgust)
screenreg(Modelnrc_A_trust)
screenreg(Modelnrc_A_surprise)
stargazer(Modelbing_A_pos, Modelbing_A_neg, Modelafinn_A,
align=TRUE,
type = 'text',
covariate.labels = c("a","s","d","f","g","h","j","k"),
column.sep.width = "10pt",
title= "Table 2. Panel regression - Sentiment Analysis",
dep.var.labels = "sentiment")
model.names = FALSE,
stargazer(Modelbing_A_pos, Modelbing_A_neg, Modelafinn_A,
align=TRUE,
type = 'text',
covariate.labels = c("PTS=2","PTS=3","PTS=4","PTS=5","change of PTS","PTS=2*change","PTS=3*change","PTS=4*change"),
column.sep.width = "10pt",
title= "Table 2. Panel regression - Sentiment Analysis",
dep.var.labels = "sentiment"),
stargazer(Modelbing_A_pos, Modelbing_A_neg, Modelafinn_A,
align=TRUE,
type = 'text',
covariate.labels = c("PTS=2","PTS=3","PTS=4","PTS=5","change of PTS","PTS=2*change","PTS=3*change","PTS=4*change"),
column.sep.width = "10pt",
title= "Table 2. Panel regression - Sentiment Analysis",
dep.var.labels = c("bing positive","bing negative", "afinn"),
model.names = FALSE,
column.labels = c("bing positive", "bing negative","afinn"),
model.numbers = FALSE,
omit.stat=c("LL","ser","f","adj.rsq"),
star.char = c("*","**","***"),
star.cutoffs = c(0.05,0.01,0.001))
stargazer(Modelbing_A_pos, Modelbing_A_neg, Modelafinn_A,
align=TRUE,
type = 'text',
covariate.labels = c("PTS=2","PTS=3","PTS=4","PTS=5","change of PTS","PTS=2*change","PTS=3*change","PTS=4*change"),
column.sep.width = "10pt",
title= "Table 2. Panel regression - Sentiment Analysis",
dep.var.labels = c("bing positive","bing negative", "afinn"),
model.names = FALSE,
model.numbers = FALSE,
omit.stat=c("LL","ser","f","adj.rsq"),
star.char = c("*","**","***"),
star.cutoffs = c(0.05,0.01,0.001))
stargazer(Modelbing_A_pos, Modelbing_A_neg, Modelafinn_A,
align=TRUE,
type = 'text',
covariate.labels = c("PTS=2","PTS=3","PTS=4","PTS=5","change of PTS","PTS=2*change","PTS=3*change","PTS=4*change"),
column.sep.width = "10pt",
title= "Table 2. Panel regression - Sentiment Analysis",
dep.var.labels = c("bing pos","bing neg", "afinn"),
model.names = FALSE,
model.numbers = FALSE,
omit.stat=c("LL","ser","f","adj.rsq"),
star.char = c("*","**","***"),
star.cutoffs = c(0.05,0.01,0.001))
stargazer(Modelbing_A_pos, Modelbing_A_neg, Modelafinn_A,
align=TRUE,
type = 'text',
covariate.labels = c("PTS=2","PTS=3","PTS=4","PTS=5","change of PTS","PTS=2*change","PTS=3*change","PTS=4*change"),
column.sep.width = "10pt",
title= "Table 2. Panel regression - Sentiment Analysis",
dep.var.labels = c("pos","neg", "afinn"),
model.names = FALSE,
model.numbers = FALSE,
omit.stat=c("LL","ser","f","adj.rsq"),
star.char = c("*","**","***"),
star.cutoffs = c(0.05,0.01,0.001))
stargazer(Modelbing_A_pos, Modelbing_A_neg, Modelafinn_A,
align=TRUE,
type = 'text',
covariate.labels = c("PTS=2","PTS=3","PTS=4","PTS=5","change of PTS","PTS=2*change","PTS=3*change","PTS=4*change"),
column.sep.width = "10pt",
title= "Table 2. Panel regression - Sentiment Analysis",
column.labels = c("bing positive", "bing negative","afinn"),
model.names = FALSE,
model.numbers = FALSE,
omit.stat=c("LL","ser","f","adj.rsq"),
star.char = c("*","**","***"),
star.cutoffs = c(0.05,0.01,0.001))
stargazer(Modelbing_A_pos, Modelbing_A_neg, Modelafinn_A,
align=TRUE,
type = 'text',
covariate.labels = c("PTS=2","PTS=3","PTS=4","PTS=5","change of PTS","PTS=2*change","PTS=3*change","PTS=4*change"),
column.sep.width = "10pt",
title= "Table 2. Panel regression - Sentiment Analysis",
dep.var.labels = "",
column.labels = c("bing positive", "bing negative","afinn"),
model.names = FALSE,
model.numbers = FALSE,
omit.stat=c("LL","ser","f","adj.rsq"),
star.char = c("*","**","***"),
star.cutoffs = c(0.05,0.01,0.001))
stargazer(Modelbing_A_pos, Modelbing_A_neg, Modelafinn_A,
align=TRUE,
type = 'text',
covariate.labels = c("PTS=2","PTS=3","PTS=4","PTS=5","change of PTS","PTS=2*change","PTS=3*change","PTS=4*change"),
column.sep.width = "10pt",
title= "Table 2. Panel regression - Sentiment Analysis",
dep.var.labels = c("","")
column.labels = c("bing positive", "bing negative","afinn"),
stargazer(Modelbing_A_pos, Modelbing_A_neg, Modelafinn_A,
align=TRUE,
type = 'text',
covariate.labels = c("PTS=2","PTS=3","PTS=4","PTS=5","change of PTS","PTS=2*change","PTS=3*change","PTS=4*change"),
column.sep.width = "10pt",
title= "Table 2. Panel regression - Sentiment Analysis",
dep.var.labels = c("",""),
column.labels = c("bing positive", "bing negative","afinn"),
model.names = FALSE,
model.numbers = FALSE,
omit.stat=c("LL","ser","f","adj.rsq"),
star.char = c("*","**","***"),
star.cutoffs = c(0.05,0.01,0.001))
stargazer(Modelbing_A_pos, Modelbing_A_neg, Modelafinn_A, Modelnrc
align=TRUE,
stargazer(Modelbing_A_pos, Modelbing_A_neg, Modelafinn_A, Modelnrc_anger, Modelnrc_A_disgust, Modelnrc_A_fear, Modelnrc_A_surprise,
align=TRUE,
type = 'text',
covariate.labels = c("PTS=2","PTS=3","PTS=4","PTS=5","change of PTS","PTS=2*change","PTS=3*change","PTS=4*change"),
column.sep.width = "10pt",
title= "Table 2. Panel regression - Sentiment Analysis",
dep.var.labels = c("",""),
column.labels = c("bing positive", "bing negative","afinn"),
model.names = FALSE,
model.numbers = FALSE,
omit.stat=c("LL","ser","f","adj.rsq"),
star.char = c("*","**","***"),
star.cutoffs = c(0.05,0.01,0.001))
stargazer(Modelbing_A_pos, Modelbing_A_neg, Modelafinn_A, Modelnrc_anger, Modelnrc_A_disgust, Modelnrc_A_fear, Modelnrc_A_surprise,
align=TRUE,
type = 'text',
covariate.labels = c("PTS=2","PTS=3","PTS=4","PTS=5","change of PTS","PTS=2*change","PTS=3*change","PTS=4*change"),
column.sep.width = "10pt",
title= "Table 2. Panel regression - Sentiment Analysis",
dep.var.labels = c("",""),
column.labels = c("bing positive", "bing negative","afinn", "anger", "disgust", "fear", "surprise"),
model.names = FALSE,
model.numbers = FALSE,
omit.stat=c("LL","ser","f","adj.rsq"),
star.char = c("*","**","***"),
star.cutoffs = c(0.05,0.01,0.001))
screenreg(Modelnrc_A_positive)
screenreg(Modelnrc_anger)
screenreg(Modelnrc_A_disgust)
screenreg(Modelnrc_A_sadness)
screenreg(Modelnrc_A_fear)
screenreg(Modelnrc_A_negative)
screenreg(Modelnrc_A_positive)
screenreg(Modelnrc_A_anticip)
screenreg(Modelnrc_A_trust)
screenreg(Modelnrc_A_surprise)
ggplot(merge_sentiment_counts1, aes(x=as.numeric(PTS_S_var), y=n_bing))+
geom_jitter(color="red")+
theme_minimal()+
ylab("Frequency of Sentiment Words in UN speeches")+
xlab("Change in PTS")
ggplot(merge_sentiment_counts2, aes(x=as.numeric(PTS_S_var), y=sentiment_afinn))+
geom_jitter(color="red")+
theme_minimal()+
ylab("Value of Sentiment Words in UN speeches")+
xlab("Change in PTS")
