geom_col(show.legend = FALSE) +
coord_flip() +
ggtitle("-Punctuation +ngrams=2")+
theme(plot.title = element_text(size = 8,hjust = 0))
grid.arrange(g_df_c_dfungc, g_df_c1_dfungc, g_df_c2_dfungc,g_df_c3_dfungc,g_df_c4_dfungc,
nrow = 2,
top="Word Count Review")
library(quanteda)
#create human rights lists from the three sources
HRlistFariss <- list( c("kill"), c("forc"), c("arm"), c("group"), c("civilian"), c("human"), c("secur"), c("disappear"), c("attack"), c("execut") , c("tortur"), c("member"), c("includ"), c("arrest"), c("prison"), c("polit"), c("amnesti"), c("trial"), c("releas"), c("imprison"), c("sentenc"), c("charg"), c("conscience"), c("polic"), c("offic"), c("illtreat"), c("death"), c("court"), c("alleg"), c("law"), c("service"), c("concern"), c("appeal"), c("servic"), c("committee"),    c("militari"), c("area"), c("continu"), c("section"), c("state"), c("dure"), c("arrest"), c("accord"), c("offici"), c("presid"), c("opposit"), c("howev"), c("parti"), c("author"), c("law"), c("provid"), c("gener"), c("public"), c("constitut"), c("employ"), c("women"), c("right"), c("respect"), c("freedom"), c("prohibit"), c("case"), c("ngo"), c("tortur"), c("gener"), c("labor"), c("detain"), c("releas"), c("elect"), c("local"), c("presidenti"), c("region"), c("mani"), c("regim"), c("nation"), c("ethnic"), c("union"), c("practic"), c("work"), c("foreign"), c("children"), c("investig"), c("relig"), c("islam"), c("roma"), c("worker"), c("traffic"), c("feder"), c("parliament"))
HRlistGreene <- list(c("committed"), c("victims"), c("populations"), c("scale"), c("armed"), c("army"), c("commanders"), c("conscripted"), c("assassinations"), c("massacres"), c("internally", "displaced"), c("food"), c("humanitarian"), c("landmines"), c("money"), c("raped"), c("disappearances"), c("frequently"), c("numerous"), c("widespread"), c("common"), c("regularly"), c("routinely"), c("systematic"), c("extensive"))
HRlistWatanabe <- list(c("human", "rights"), c("violat"), c("race"), c("dignit"), c("protect"), c("citizen"), c("educat"), c("child"), c("refugee"), c("communit"), c("people"), c("responsibl"), c("health"), c("world"))
HRlist <- do.call(c, list(HRlistFariss, HRlistGreene, HRlistWatanabe))
summary(HRlist)
###library(quanteda)
#Hrlist_compound <- tokens_compound(tok.r, mylist, valuetype = #"fixed", concatenator = "_")
#?tokens_compound
###
#create dictionaries from the three sources
dict_HRFariss <- dictionary(list(human_rightsF = c("kill", "forc", "arm", "group", "civilian", "human", "secur", "disappear", "attack", "execut" , "tortur", "member", "includ", "arrest", "prison", "polit", "amnesti", "trial", "releas", "imprison", "sentenc", "charg", "conscience", "polic", "offic", "illtreat", "death", "court", "alleg", "law", "service", "concern", "appeal", "servic", "committee", "militari", "area", "continu", "section", "state", "dure", "arrest", "offici", "presid", "opposit", "parti", "author", "law", "provid", "gener", "public", "constitut", "employ", "women", "right", "respect", "freedom", "prohibit", "case", "ngo", "tortur", "gener", "labor", "detain", "releas", "elect", "local", "presidenti", "region", "mani", "regim", "nation", "ethnic", "union", "practic", "work", "foreign", "children", "investig", "relig", "islam", "roma", "worker", "traffic", "feder", "parliament")))
dict_HRGreene <- dictionary(list(human_rightsG = c("commit", "victim", "popul", "scale", "armi", "command", "conscript", "assassin", "massacr", "intern_displac", "food", "humanitarian", "landmin", "money", "rape", "disappear", "widespread", "systemat", "extens")))
#checking the stemmed version of dict_HRGreene
char_HRGreene <- as.character(dict_HRGreene)
toks_HRGreene <- tokens(char_HRGreene)
toks_HRGreene
remove_HRGreene <- tokens(toks_HRGreene, remove_punct = TRUE)
remove_HRGreene
tokens_wordstem(remove_HRGreene)
dict_HRWatanabe <- dictionary(list(human_rightsW = c("human_rights", "violat", "race", "dignit", "protect", "citizen", "educat", "child", "refugee", "communit", "people", "responsibl", "health", "world")))
#combine the dictionaries
HRdict <- c(dict_HRGreene["human_rightsG"], dict_HRFariss["human_rightsF"], dict_HRWatanabe["human_rightsW"])
HRdict
###please check if all words should be used
?tokens_compound
tokUNGDC <- tokens(ungd_files, what = "word",
remove_punct = TRUE,
remove_symbols = TRUE,
remove_numbers = TRUE,
remove_twitter = TRUE,
remove_url = TRUE,
remove_hyphens = FALSE,
verbose = TRUE,
include_docvars = TRUE)
tokUNGDC <- tokens(ungdc_files, what = "word",
remove_punct = TRUE,
remove_symbols = TRUE,
remove_numbers = TRUE,
remove_twitter = TRUE,
remove_url = TRUE,
remove_hyphens = FALSE,
verbose = TRUE,
include_docvars = TRUE)
?corpus
corpUNGDC <- corpus(ungdc_files)
View(corpUNGDC)
HRdict
library(quanteda)
#create human rights lists from the three sources
HRlistFariss <- list( c("kill"), c("forc"), c("arm"), c("group"), c("civilian"), c("human"), c("secur"), c("disappear"), c("attack"), c("execut") , c("tortur"), c("member"), c("includ"), c("arrest"), c("prison"), c("polit"), c("amnesti"), c("trial"), c("releas"), c("imprison"), c("sentenc"), c("charg"), c("conscience"), c("polic"), c("offic"), c("illtreat"), c("death"), c("court"), c("alleg"), c("law"), c("service"), c("concern"), c("appeal"), c("servic"), c("committee"),    c("militari"), c("area"), c("continu"), c("section"), c("state"), c("dure"), c("arrest"), c("accord"), c("offici"), c("presid"), c("opposit"), c("howev"), c("parti"), c("author"), c("law"), c("provid"), c("gener"), c("public"), c("constitut"), c("employ"), c("women"), c("right"), c("respect"), c("freedom"), c("prohibit"), c("case"), c("ngo"), c("tortur"), c("gener"), c("labor"), c("detain"), c("releas"), c("elect"), c("local"), c("presidenti"), c("region"), c("mani"), c("regim"), c("nation"), c("ethnic"), c("union"), c("practic"), c("work"), c("foreign"), c("children"), c("investig"), c("relig"), c("islam"), c("roma"), c("worker"), c("traffic"), c("feder"), c("parliament"))
HRlistGreene <- list(c("committed"), c("victims"), c("populations"), c("scale"), c("armed"), c("army"), c("commanders"), c("conscripted"), c("assassinations"), c("massacres"), c("internally", "displaced"), c("food"), c("humanitarian"), c("landmines"), c("money"), c("raped"), c("disappearances"), c("frequently"), c("numerous"), c("widespread"), c("common"), c("regularly"), c("routinely"), c("systematic"), c("extensive"))
HRlistWatanabe <- list(c("human", "rights"), c("violat"), c("race"), c("dignit"), c("protect"), c("citizen"), c("educat"), c("child"), c("refugee"), c("communit"), c("people"), c("responsibl"), c("health"), c("world"))
HRlist <- do.call(c, list(HRlistFariss, HRlistGreene, HRlistWatanabe))
summary(HRlist)
#create dictionaries from the three sources
dict_HRFariss <- dictionary(list(human_rightsF = c("kill", "forc", "arm", "group", "civilian", "human", "secur", "disappear", "attack", "execut" , "tortur", "member", "includ", "arrest", "prison", "polit", "amnesti", "trial", "releas", "imprison", "sentenc", "charg", "conscience", "polic", "offic", "illtreat", "death", "court", "alleg", "law", "service", "concern", "appeal", "servic", "committee", "militari", "area", "continu", "section", "state", "dure", "arrest", "offici", "presid", "opposit", "parti", "author", "law", "provid", "gener", "public", "constitut", "employ", "women", "right", "respect", "freedom", "prohibit", "case", "ngo", "tortur", "gener", "labor", "detain", "releas", "elect", "local", "presidenti", "region", "mani", "regim", "nation", "ethnic", "union", "practic", "work", "foreign", "children", "investig", "relig", "islam", "roma", "worker", "traffic", "feder", "parliament")))
dict_HRGreene <- dictionary(list(human_rightsG = c("commit", "victim", "popul", "scale", "armi", "command", "conscript", "assassin", "massacr", "intern_displac", "food", "humanitarian", "landmin", "money", "rape", "disappear", "widespread", "systemat", "extens")))
#checking the stemmed version of dict_HRGreene
char_HRGreene <- as.character(dict_HRGreene)
toks_HRGreene <- tokens(char_HRGreene)
toks_HRGreene
remove_HRGreene <- tokens(toks_HRGreene, remove_punct = TRUE)
remove_HRGreene
tokens_wordstem(remove_HRGreene)
dict_HRWatanabe <- dictionary(list(human_rightsW = c("human_rights", "violat", "race", "dignit", "protect", "citizen", "educat", "child", "refugee", "communit", "people", "responsibl", "health", "world")))
#combine the dictionaries
HRdict <- c(dict_HRGreene["human_rightsG"], dict_HRFariss["human_rightsF"], dict_HRWatanabe["human_rightsW"])
HRdict
###please check if all words should be used
?dictionary
fileagents <- tempfile()
?download.file
download.file("https://github.com/juribep5/tadaproject/blob/master/agents.csv")
download.file("https://github.com/juribep5/tadaproject/blob/master/agents.csv", fileagents)
tempagents <- tempfile()
tempagents <- download.file("https://github.com/juribep5/tadaproject/blob/master/agents.csv", tempagents)
tempagents
tempagents <- download.file("https://github.com/juribep5/tadaproject/blob/master/agents.csv", tempagents, mode = "wb")
str(tempagents)
?load
?read.csv
fileagents <- read.csv("http://some.where.net/data/foo.csv", header = TRUE, sep = ",")
fileagents <- read.csv("https://raw.githubusercontent.com/juribep5/tadaproject/master/agents.csv", header = TRUE, sep = ",")
fileagents
str(fileagents)
drop <- c("note")
fileagents
fileagents
str(fileagents)
?rename
rename(fileagents, ï..text = agent, code   = code, note   = note)
rename(fileagents, agent = ï..text, code=   code, note=   note)
fileagents
str(fileagents)
rename(fileagents, agent = ï..text)
str(fileagents)
fileagents %>%
rename(
agents = ï..text
)
str(fileagents)
fileagents$ï..text
rename(fileagents$ï..text = fileagents$agents)
fileagents = subset(mydata, select = -c(note))
fileagents = subset(fileagents, select = -c(note))
fileagents
mode(fileagents)
fileagents
dictagents = dictionary(list(fileagents, tolower = TRUE))
dictagents = dictionary(fileagents, tolower = TRUE)
mode(fileagents)
dictagents = dictionary(list(agents = fileagents, tolower = TRUE)
dictagents = dictionary(list(agents = fileagents, tolower = TRUE))
dictagents <- dictionary(list(agents = fileagents, tolower = TRUE))
colnames(fileagents) <- c("agent", "topic")
fileagents
mode(fileagents)
dictagents <- dictionary(list(agents = fileagents, tolower = TRUE))
charagents <- as.list(fileagents)
listagents <- as.list(fileagents)
listagents
str(listagents)
View(listagents)
View(listagents)
gsub("[[:punct:]]", "", listagents)
gsub("[[:punct:]]", "", listagents$topic)
str(listagents)
fileagents
gsub("[[:punct:]]", "", fileagents$topic)
fileagent2 <- gsub("[[:punct:]]", "", fileagents$topic)
head(fileagent2)
fileagent2
fileagent2 <- gsub("[[:punct:]]", "", fileagents)
fileagent2
df(fileagent2)
fileagent$topic
fileagents$topic
?gsub
fileagents2$topic <- gsub("[[:punct:]]", "", fileagents$topic")
?gsub
?rename
?gsub""
fileagents2$topic <- gsub("[[:punct:]]", "", fileagents$topic)
fileagents2 <- gsub("[[:punct:]]", "", fileagents$topic)
fileagents2
fileagents1 <- gsub("[[:punct:]]", "", fileagents$agent)
fileagents1
fileagents
gsub("[[:punct:]]", "", fileagents$topic)
fileagents
str(fileagents)
fileagents2 <- gsub("[[:punct:]]", "", fileagents$topic)
str(fileagents2)
dictagents <- dictionary(list(agents = fileagents, tolower = TRUE))
vieW(fileagents)
fileagents
summary(fileagents)
summary(fileagents$topic)
summary(fileagents)
str(fileagents)
dictagents <- dictionary(list(agents = fileagents, tolower = TRUE))
??list
?list
as.list(fileagents$agent)
as.list(fileagent$topic)
as.list(fileagents$topic)
dictagents <- dictionary(list(agents = fileagents, tolower = TRUE))
?dictionary
dictagents <- dictionary(list(agents = fileagents, format = "wordstat", tolower = TRUE))
dictagents <- dictionary(list(agents = fileagents, format = "LIWC", tolower = TRUE))
fileagents
str(fileagents)
encoding(fileagents)
dictagents <- as.dictionary(list(agents = fileagents, tolower = TRUE))
install.packages("rworldmap")
library(zip)
#Loading packages and data
library(readtext)
library(quanteda)
library(dplyr)
library(tidyr)
library(stringr)
library(ggplot2)
library(rworldmap)
library(RColorBrewer)
library(haven)
library(readxl)
#Upload UNGDC data
ungd_files <- readtext("Converted sessions/*",
docvarsfrom = "filenames",
dvsep="_",
docvarnames = c("Country", "Session", "Year"))
#Upload UNGDC data
dir.create(temp <- tempfile())
urlungdc<-'https://dataverse.harvard.edu/api/access/datafile/:persistentId?persistentId=doi:10.7910/DVN/0TJX8Y/PZUURT'
download.file(urlungdc, paste0(temp, '/PZUURT.zip'), mode="wb",
exdir = temp)
unzip(paste0(temp, '/PZUURT.zip'), exdir = temp)
ungd_files <- readtext("temp",
docvarsfrom = "filenames",
dvsep="_",
docvarnames = c("Country", "Session", "Year"))
temp
ungd_files <- readtext(paste0(temp, '/Converted sessions',
docvarsfrom = "filenames",
dvsep="_",
docvarnames = c("Country", "Session", "Year")))
ungd_files <- readtext(paste0(temp, '/Converted sessions/*',
docvarsfrom = "filenames",
dvsep="_",
docvarnames = c("Country", "Session", "Year")))
#Upload UNGDC data
dir.create(temp <- tempfile())
urlungdc<-'https://dataverse.harvard.edu/api/access/datafile/:persistentId?persistentId=doi:10.7910/DVN/0TJX8Y/PZUURT'
download.file(urlungdc, paste0(temp, '/PZUURT.zip'), mode="wb",
exdir = temp)
unzip(paste0(temp, '/PZUURT.zip'), exdir = temp)
ungd_files <- readtext(paste0(temp, '/Converted sessions/*',
docvarsfrom = "filenames",
dvsep="_",
docvarnames = c("Country", "Session", "Year")))
listungdc <- list.files(temp, '/Converted sessions/*')
head(listungdc)
?system.file
unzip(system.file("extdata", "PZUURT.zip", package = "readtext"), exdir = temp)
unzip(system.file("PZUURT.zip", package = "readtext"), exdir = temp)
unzip(system.file("/PZUURT.zip", package = "readtext"), exdir = temp)
unzip(system.file('/PZUURT.zip', package = "readtext"), exdir = temp)
unzip(system.file(temp, '/PZUURT.zip', package = "readtext"), exdir = temp)
unzip(paste0(temp, '/PZUURT.zip'), exdir = temp)
ungd_files <- readtext(paste0("/Converted sessions/*",
docvarsfrom = "filenames",
dvsep="_",
docvarnames = c("Country", "Session", "Year")))
ungd_files <- readtext("/Converted sessions/*",
docvarsfrom = "filenames",
dvsep="_",
docvarnames = c("Country", "Session", "Year")))
ungd_files <- readtext("/Converted sessions/*",
docvarsfrom = "filenames",
dvsep="_",
docvarnames = c("Country", "Session", "Year"))
ungd_files <- readtext(paste0(temp, "/Converted sessions/*"),
encoding = encoding,
docvarsfrom = "filenames",
dvsep="_",
docvarnames = c("Country", "Session", "Year"))
ungd_files <- readtext(paste0(temp, "/Converted sessions/*"),
docvarsfrom = "filenames",
dvsep="_",
docvarnames = c("Country", "Session", "Year"))
head(ungd_files)
ungd_files$doc_id <- str_replace(ungd_files$doc_id , ".txt", "") %>%
str_replace(. , "_\\d{2}", "")
ungd_corpus <- corpus(ungd_files, text_field = "text")
ungdc.1990 <- corpus_subset(ungd_corpus, Year>1990)
#Tokenization and basic pre-processing
tok <- tokens(ungd_corpus, what = "word",
remove_punct = TRUE,
remove_symbols = TRUE,
remove_numbers = TRUE,
remove_twitter = TRUE,
remove_url = TRUE,
remove_hyphens = FALSE,
verbose = TRUE,
include_docvars = TRUE)
library(zip)
#filelist <- list.files(path = root_folder, pattern = '*.txt', recursive = TRUE)
#filenames <- basename(filelist)
#ungdc_files <- data.frame(t(sapply(strsplit(filenames, '_'),
#                 function(x) c(x[1], x[2], substr(x[3], 1, 4)))))
#colnames(ungdc_files) <- c('country', 'number', 'year')
#ungdc_files$text <- sapply(paste0(root_folder, filelist), function(x) readChar(x, file.info(x)$size))
#load(url("http://www.politicalterrorscale.org/Data/Files/PTS-2019.RData"))
#filelist <- list.files(path = root_folder, pattern = '*.txt', recursive = TRUE)
#filenames <- basename(filelist)
#ungdc_files <- data.frame(t(sapply(strsplit(filenames, '_'),
#                 function(x) c(x[1], x[2], substr(x[3], 1, 4)))))
#colnames(ungdc_files) <- c('country', 'number', 'year')
#ungdc_files$text <- sapply(paste0(root_folder, filelist), function(x) readChar(x, file.info(x)$size))
#load(url("http://www.politicalterrorscale.org/Data/Files/PTS-2019.RData"))
#Loading packages and data
library(readtext)
library(quanteda)
library(dplyr)
library(tidyr)
library(stringr)
library(ggplot2)
library(rworldmap)
library(RColorBrewer)
library(haven)
library(readxl)
#Upload UNGDC data
dir.create(temp <- tempfile())
urlungdc<-'https://dataverse.harvard.edu/api/access/datafile/:persistentId?persistentId=doi:10.7910/DVN/0TJX8Y/PZUURT'
download.file(urlungdc, paste0(temp, '/PZUURT.zip'), mode="wb",
exdir = temp)
unzip(paste0(temp, '/PZUURT.zip'), exdir = temp)
ungd_files <- readtext(paste0(temp, "/Converted sessions/*"),
docvarsfrom = "filenames",
dvsep="_",
docvarnames = c("Country", "Session", "Year"))
head(ungd_files)
ungd_files$doc_id <- str_replace(ungd_files$doc_id , ".txt", "") %>%
str_replace(. , "_\\d{2}", "")
unlink(temp)
rm(temp)
#rm(filelist)
#rm(filenames)
rm(urlungdc)
load(url("http://www.politicalterrorscale.org/Data/Files/PTS-2019.RData"))
PTS_2019<-arrange(PTS_2019,Country,Year)
PTS_2019<-PTS_2019 %>%
group_by(Country) %>%
mutate(.,PTS_S_ch=c(NA,diff(PTS_S)))
PTS_2019<-mutate(PTS_2019,PTS_S_var= ifelse(PTS_S_ch>0,1,0))
PTS_2019<-PTS_2019 %>%
group_by(Country) %>%
mutate(.,PTS_H_ch=c(NA,diff(PTS_H)))
PTS_2019<-mutate(PTS_2019,PTS_H_var= ifelse(PTS_H_ch>0,1,0))
PTS_2019<-PTS_2019 %>%
group_by(Country) %>%
mutate(.,PTS_A_ch=c(NA,diff(PTS_A)))
PTS_2019<-mutate(PTS_2019,PTS_A_var= ifelse(PTS_A_ch>0,1,0))
print(PTS_2019)
print(ungd_files)
comp_year <- compare_df(ungd_files, PTS_2019, c("Year"))
library(comparedf)
library(compareDF)
install.packages("compareDF")
library(compareDF)
comp_year <- compare_df(ungd_files, PTS_2019, c("Year"))
comp_year <- compare_df(ungd_files$Year, PTS_2019$Year, c("Year"))
print(ungd_files$Year)
summary(ungd_files$Year)
list(ungd_files$Year)
all(ungd_files$Year == PTS_2019$Year)
mode(ungd_files)
mode(PTS_2019)
?data_frame
df_PTS_2019 <- convert(PTS_2019, to = "data.frame")
df_PTS_2019 <- data.frame(PTS_2019)
df_ungd_files <- data.frame(ungd_files)
all(df_ungd_files$Year == df_PTS_2019$Year)
?tribble
PTS_2019 %>%
group_by(Year) %>%
summarise(n = n()) %>%
mutate(totalN = (cumsum(n)),
percent = round((n / sum(n)), 3),
cumpercent = round(cumsum(freq = n / sum(n)),3))
PTS_2019 %>%
group_by(Year) %>%
summarise(n = n()) %>%
mutate(totalN = (cumsum(n)))
PTS_2019 %>%
group_by(Year) %>%
summarise(n = n())
PTS_2019 %>%
group_by(Year)
PTS_2019 %>%
group_by(Year)
PTS_2019 %>%
group_by(Year) %>%
summarise(n = n())
ungd_files %>%
group_by(Year) %>%
summarise(n = n())
ungd_files1976 <- ungd_files[-c(1970:1775), ]
ungd_files1976 %>%
group_by(Year) %>%
summarise(n = n())
ungd_files1976 <- ungd_files[-c(1970:1975),]
ungd_files1976 %>%
group_by(Year) %>%
summarise(n = n())
as.numeric(ungd_files$Year)
ungd_files1976 <- ungd_files[-c(1970:1975),]
ungd_files1976 %>%
group_by(Year) %>%
summarise(n = n())
ungd_files1976 <- ungd_files[-c(1970, 1971, 1972, 1973, 1974, 1975),]
ungd_files1976 %>%
group_by(Year) %>%
summarise(n = n())
ungdc_files$year<-as.integer(as.character(ungdc_files$year))
ungd_files$year<-as.integer(as.character(ungdc_files$year))
ungd_files$year<-as.integer(as.character(ungd_files$year))
ungd_files$Year<-as.integer(as.character(ungd_files$Year))
ungd_files1976 <- ungd_files[-c(1970, 1971, 1972, 1973, 1974, 1975),]
ungd_files1976 %>%
group_by(Year) %>%
summarise(n = n())
ungd_files1976 <- ungd_files[-(3:10)]
ungd_files1976 %>%
group_by(Year) %>%
summarise(n = n())
ungd_files1976 <- ungd_files$Year[-(1970:1975)]
ungd_files1976 %>%
group_by(Year) %>%
summarise(n = n())
ungd_files %>%
group_by(Year) %>%
summarise(n = n())
#ungd_files$Year<-as.integer(as.character(ungd_files$Year))
ungd_files1976 <- ungd_files$Year[-(1970:1975)]
ungd_files1976 %>%
group_by(Year) %>%
summarise(n = n())
head(ungd_files1976$Year$Country)
print(ungd_files1976$Year$Country)
print(ungd_files1976$Year)
list(ungd_files1976$Year)
ungd_files1976$Year
#ungd_files$Year<-as.integer(as.character(ungd_files$Year))
ungd_files1976 <- ungd_files[-(1970:1975)]
ungd_files1976$Year
ungd_files %>%
group_by(Year) %>%
summarise(n = n())
print(ungd_files)
df_ungd_files <- data.frame(PTS_2019)
print(PTS_2019)
#compare country
PTS_2019 %>%
group_by(WordBank_Code_A) %>%
summarise(n = n())
#compare country
PTS_2019 %>%
group_by(Cow_Code_A) %>%
summarise(n = n())
#compare country
PTS_2019 %>%
group_by(COW_Code_A) %>%
summarise(n = n())
all(ungd_files$Country == df_PTS_2019$COW_Code_A)
all(ungd_files$Country == df_PTS_2019$COW_Code_A, Year ==2018)
ungd_files %>%
group_by(Year) %>%
summarise(n = n())
ungd_files %>%
group_by(Country) %>%
summarise(n = n())
#compare country
PTS_2019 %>%
group_by(COW_Code_A) %>%
summarise(n = n())
ungd_files %>%
group_by(Country) %>%
summarise(n = n())
#compare country
PTS_2019 %>%
group_by(WordBank_Code_A) %>%
summarise(n = n())
View(PTS_2019)
View(ungd_files)
colnames(ungd_files)[colnames(ungd_files)=="Country"] <- "MergeCountry"
colnames(PTS_2019)[colnames(PTS_2019)=="WordBank_Code_A"] <- "MergeCountry"
#compare country
PTS_2019 %>%
group_by(MergeCountry) %>%
summarise(n = n())
ungd_files %>%
group_by(MergeCountry) %>%
summarise(n = n())
exWordbankmerge <- merge(PTS_2019, ungd_files, by = c('Year','MergeCountry'), all=TRUE)
str(ungd_files)
str(PTS_2019)
alpha_3
str(exWordbankmerge)
merge_PTS_ungd <- merge(PTS_2019, ungd_files, by = c('Year','MergeCountry'), all=TRUE)
View(merge_PTS_ungd)
print(merge_PTS_ungd)
?subset
merge_PTS_ungd1976 <- subset(merge_PTS_ungd, !merge_PTS_ungd$Year<1976)
head(merge_PTS_ungd1976)
tail(merge_PTS_ungd1976)
head(merge_PTS_ungd1976$MergeCountry=NA)
head(merge_PTS_ungd1976$MergeCountry == NA)
head(merge_PTS_ungd1976, merge_PTS_ungd1976$MergeCountry == NA)
NA_PTS_ungd1976 <- subset(merge_PTS_ungd1976, merge_PTS_ungd1976$MergeCountry == NA)
head(NA_PTS_ungd19769
head(NA_PTS_ungd1976)
head(NA_PTS_ungd1976)
NA_PTS_ungd1976 <- subset(merge_PTS_ungd1976, merge_PTS_ungd1976$MergeCountry = NA)
NA_PTS_ungd1976 <- subset(merge_PTS_ungd1976, merge_PTS_ungd1976$MergeCountry==NA)
NA_PTS_ungd1976
NA_PTS_ungd1976 <- subset(merge_PTS_ungd1976, is.na(merge_PTS_ungd1976$MergeCountry))
NA_PTS_ungd1976
head(NA_PTS_ungd1976)[1:100]
head(NA_PTS_ungd1976)
head(NA_PTS_ungd1976, 1:100)
head(NA_PTS_ungd1976[1:100])
head(NA_PTS_ungd1976[,100])
head(NA_PTS_ungd1976,100)
mergeNA_PTS_ungd_1976 <- subset(merge_PTS_ungd1976, !is.na(merge_PTS_ungd_1976$MergeCountry))
mergeNA_PTS_ungd_1976 <- subset(merge_PTS_ungd1976, !is.na(merge_PTS_ungd1976$MergeCountry))
head(mergeNA_PTS_ungd1976,100)
head(mergeNA_PTS_ungd_1976,100)
tail(mergeNA_PTS_ungd_1976,100)
head(mergeNA_PTS_ungd_1976)
tail(mergeNA_PTS_ungd_1976)
is.na(mergeNA_PTS_ungd_1976$Country)
