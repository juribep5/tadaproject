library(syuzhet)
library(texreg)
library(tidyr)
library(zip)
library(tibble)
#install.packages("tidytext")
#install.packages("tidyverse")
library(tidytext)
library(tidyverse)
library(glue)
library(remotes)
install_github("EmilHvitfeldt/textdata")
install_github("juliasilge/tidytext")
#Upload UNGDC data
dir.create(temp <- tempfile())
urlungdc<-'https://dataverse.harvard.edu/api/access/datafile/:persistentId?persistentId=doi:10.7910/DVN/0TJX8Y/PZUURT'
download.file(urlungdc, paste0(temp, '/PZUURT.zip'), mode="wb",
exdir = temp)
View(ungd_files)
unzip(paste0(temp, '/PZUURT.zip'), exdir = temp)
sent_words <- clean_PTS_ungd1976 %>%
group_by(MergeCountry) %>%
ungroup() %>%
unnest_tokens(word, text)
head(sent_words)
sent_words_lim <- subset(sent_words, select = c(Year, MergeCountry, PTS_A, PTS_A_var, Session, word))
sent_words_lim
#find total number of words
wordstotal <- sent_words_lim %>%
count(MergeCountry)
wordstotal$total<-wordstotal$n
wordstotal<-wordstotal[,c("MergeCountry", "total")]
wordstotal
#find total number of words
wordstotal <- sent_words_lim %>%
count(MergeCountry, Year)
wordstotal$total<-wordstotal$n
wordstotal<-wordstotal[,c("MergeCountry", "Year", "total")]
wordstotal
#negative sentiment - bing
sentiment_plotn <-
sent_words_lim %>%
inner_join(get_sentiments("bing")) %>%
filter(sentiment == "negative") %>%
count(Year, MergeCountry, sentiment)
ggplot(sentiment_plotn, aes(x=Year, y=n))+
geom_smooth(color="blue")+
geom_point(color="red")
theme_minimal()+
ylab("Frequency of Negative Words in UN speeches")+
xlab("Year")
ggplot(sentiment_plotn, aes(x=Year, y=n))+
geom_smooth(color="blue")+
geom_point(color="red")
theme_minimal()+
ylab("Frequency of Negative Words in UN speeches")+
xlab("Year")
ggplot(sentiment_plotn, aes(x=Year, y=n))+
geom_smooth(color="blue")+
geom_point(color="red")
theme_minimal()+
ylab("Frequency of Negative Words in UN speeches")+
xlab("Year")
ggplot(sentiment_plotn, aes(x=Year, y=n))+
geom_smooth(color="blue")+
geom_point(color="red")+
theme_minimal()+
ylab("Frequency of Negative Words in UN speeches")+
xlab("Year")
library(ggplot2)
ggplot(sentiment_plotn, aes(x=Year, y=n))+
geom_smooth(color="blue")+
geom_point(color="red")+
theme_minimal()+
ylab("Frequency of Negative Words in UN speeches")+
xlab("Year")
sentiment_plotp <-
sent_words_lim %>%
inner_join(get_sentiments("bing")) %>%
filter(sentiment == "positive") %>%
count(Year, MergeCountry, sentiment)
ggplot(sentiment_plotp, aes(x=as.numeric(Year), y=n))+
geom_smooth(color="red")+
geom_point(color="blue")+
theme_minimal()+
ylab("Frequency of Positive Words in UN speeches")+
xlab("Year")
###no sentiment filter - bing
count_UNGDsentiment_bing <-
sent_words_lim %>%
inner_join(get_sentiments("bing")) %>%
count(Year, MergeCountry, sentiment)
count_UNGDsentiment_bing
##afinn
count_UNGDsentiment_afinn <- sent_words_lim %>%
inner_join(get_sentiments("afinn")) %>%
group_by(MergeCountry, Year) %>%
count (Year, MergeCountry, value) %>%
mutate(method = "AFINN")
count_UNGDsentiment_afinn
#count sentiment dictionary nrc
count_UNGDsentiment_nrc <- sent_words_lim %>%
inner_join(get_sentiments("nrc")) %>%
group_by(MergeCountry, Year) %>%
count (Year, MergeCountry, sentiment) %>%
mutate(method = "nrc")
count_UNGDsentiment_nrc
##bing
bing_ex <- sent_words_lim %>%
filter(MergeCountry == "USA") %>%
inner_join(get_sentiments("bing")) %>%
group_by(MergeCountry) %>%
mutate(method = "BING")
bing_ex
##nrc
nrc_anger <- get_sentiments("nrc") %>%
filter(sentiment == "anger")
sent_words_lim %>%
filter(MergeCountry == "USA") %>%
inner_join(nrc_anger) %>%
count(word, sort = TRUE)
head(merge_HRdict_counts)
colnames(count_UNGDsentiment_bing)[colnames(count_UNGDsentiment_bing)=="sentiment"] <- "sentiment_bing"
colnames(count_UNGDsentiment_bing)[colnames(count_UNGDsentiment_bing)=="n"] <- "n_bing"
head(count_UNGDsentiment_bing)
merge_sentiment_counts1 <- merge(merge_HRdict_counts, count_UNGDsentiment_bing, by = c('MergeCountry','Year'), all=TRUE)
head(merge_sentiment_counts1)
##afinn
head(count_UNGDsentiment_afinn)
colnames(count_UNGDsentiment_afinn)[colnames(count_UNGDsentiment_afinn)=="method"] <- "method_afinn"
colnames(count_UNGDsentiment_afinn)[colnames(count_UNGDsentiment_afinn)=="n"] <- "n_afinn"
colnames(count_UNGDsentiment_afinn)[colnames(count_UNGDsentiment_afinn)=="value"] <- "value_afinn"
##afinn
head(count_UNGDsentiment_afinn)
merge_sentiment_counts2 <- merge(merge_HRdict_counts1, count_UNGDsentiment_afinn, by = c('MergeCountry','Year'), all=TRUE)
merge_sentiment_counts2 <- merge(merge_sentiment_counts1, count_UNGDsentiment_afinn, by = c('MergeCountry','Year'), all=TRUE)
head(merge_sentiment_counts1)
merge_sentiment_counts1 <- merge(merge_HRdict_counts, count_UNGDsentiment_bing, by = c('MergeCountry','Year'), all=TRUE)
merge_sentiment_counts2 <- merge(merge_sentiment_counts1, count_UNGDsentiment_afinn, by = c('MergeCountry','Year'), all=TRUE)
head(merge_sentiment_counts2)
##nrc
head(count_UNGDsentiment_nrc)
colnames(count_UNGDsentiment_nrc)[colnames(count_UNGDsentiment_nrc)=="method"] <- "method_nrc"
##nrc
head(count_UNGDsentiment_nrc)
colnames(count_UNGDsentiment_nrc)[colnames(count_UNGDsentiment_nrc)=="n"] <- "n_nrc"
##nrc
head(count_UNGDsentiment_nrc)
colnames(count_UNGDsentiment_nrc)[colnames(count_UNGDsentiment_nrc)=="sentiment"] <- "sentiment_nrc"
##nrc
head(count_UNGDsentiment_nrc)
merge_sentiment_all <- merge(merge_sentiment_counts2, count_UNGDsentiment_nrc, by = c('MergeCountry','Year'), all=TRUE)
merge_sentiment_all <- merge(merge_sentiment_counts2, count_UNGDsentiment_nrc, by = c('MergeCountry','Year'), all=TRUE)
head(merge_sentiment_coun
head(merge_sentiment_all)
merge_sentiment_all <- merge(merge_sentiment_counts2, count_UNGDsentiment_nrc, by = c('MergeCountry','Year'), all=TRUE)
head(merge_sentiment_all)
head(merge_sentiment_all)
head(merge_sentiment_counts1)
library(compareDF)
library(dplyr)
library(foreign)
library(ggplot2)
library(haven)
library(lmtest)
library(pander)
library(plm)
library(quanteda)
library(readtext)
library(readxl)
library(RColorBrewer)
library(rworldmap)
library(stargazer)
library(stringr)
library(syuzhet)
library(texreg)
library(tidyr)
library(zip)
library(tibble)
#install.packages("tidytext")
#install.packages("tidyverse")
library(tidytext)
library(tidyverse)
library(glue)
library(remotes)
install_github("EmilHvitfeldt/textdata")
install_github("juliasilge/tidytext")
###packages
install.packages ("plm")
install.packages("plm")
library(plm)
Modelbing_S <- plm (n_bing ~ PTS_S_dummy + PTS_S_var + PTS_S_dummy*PTS_S_var, data = merge_sentiment_all, effect = "twoways", model = "within")
#get sentiment analysis with four different dictionaries: syuzhet (1), afinn, bing, and nrc
#tokenise with tidytext
sent_words <- clean_PTS_ungd1976 %>%
group_by(MergeCountry) %>%
ungroup() %>%
unnest_tokens(word, text)
#head(sent_words)
sent_words_lim <- subset(sent_words, select = c(Year, MergeCountry, PTS_A, PTS_A_var, Session, word))
sent_words_lim
#find total number of words per country per year in speech
wordstotal <- sent_words_lim %>%
count(MergeCountry, Year)
wordstotal$total<-wordstotal$n
wordstotal<-wordstotal[,c("MergeCountry", "Year", "total")]
wordstotal
#negative sentiment - bing
sentiment_plotn <-
sent_words_lim %>%
inner_join(get_sentiments("bing")) %>%
filter(sentiment == "negative") %>%
count(Year, MergeCountry, sentiment)
library(ggplot2)
ggplot(sentiment_plotn, aes(x=Year, y=n))+
geom_smooth(color="blue")+
geom_point(color="red")+
theme_minimal()+
ylab("Frequency of Negative Words in UN speeches")+
xlab("Year")
#positive emotions UN speeches - bing
sentiment_plotp <-
sent_words_lim %>%
inner_join(get_sentiments("bing")) %>%
filter(sentiment == "positive") %>%
count(Year, MergeCountry, sentiment)
ggplot(sentiment_plotp, aes(x=as.numeric(Year), y=n))+
geom_smooth(color="red")+
geom_point(color="blue")+
theme_minimal()+
ylab("Frequency of Positive Words in UN speeches")+
xlab("Year")
###no sentiment filter - bing
count_UNGDsentiment_bing <-
sent_words_lim %>%
inner_join(get_sentiments("bing")) %>%
count(Year, MergeCountry, sentiment)
count_UNGDsentiment_bing
##afinn
count_UNGDsentiment_afinn <- sent_words_lim %>%
inner_join(get_sentiments("afinn")) %>%
group_by(MergeCountry, Year) %>%
count (Year, MergeCountry, value) %>%
mutate(method = "AFINN")
count_UNGDsentiment_afinn
#count sentiment dictionary nrc
count_UNGDsentiment_nrc <- sent_words_lim %>%
inner_join(get_sentiments("nrc")) %>%
group_by(MergeCountry, Year) %>%
count (Year, MergeCountry, sentiment) %>%
mutate(method = "nrc")
count_UNGDsentiment_nrc
##bing
bing_ex <- sent_words_lim %>%
filter(MergeCountry == "USA") %>%
inner_join(get_sentiments("bing")) %>%
group_by(MergeCountry) %>%
mutate(method = "BING")
bing_ex
##nrc
nrc_anger <- get_sentiments("nrc") %>%
filter(sentiment == "anger")
sent_words_lim %>%
filter(MergeCountry == "USA") %>%
inner_join(nrc_anger) %>%
count(word, sort = TRUE)
#Merge sentiment dictionaries with the MergeNA_PTS_ungd_1976 data set
head(merge_HRdict_counts)
#merged dataset with both dictionaries: HHRRterm and HRdict
colnames(count_UNGDsentiment_bing)[colnames(count_UNGDsentiment_bing)=="sentiment"] <- "sentiment_bing"
colnames(count_UNGDsentiment_bing)[colnames(count_UNGDsentiment_bing)=="n"] <- "n_bing"
head(count_UNGDsentiment_bing)
#merging variables are names the same
merge_sentiment_counts1 <- merge(merge_HRdict_counts, count_UNGDsentiment_bing, by = c('MergeCountry','Year'), all=TRUE)
head(merge_sentiment_counts1)
##afinn
head(count_UNGDsentiment_afinn)
colnames(count_UNGDsentiment_afinn)[colnames(count_UNGDsentiment_afinn)=="method"] <- "method_afinn"
colnames(count_UNGDsentiment_afinn)[colnames(count_UNGDsentiment_afinn)=="n"] <- "n_afinn"
colnames(count_UNGDsentiment_afinn)[colnames(count_UNGDsentiment_afinn)=="value"] <- "value_afinn"
merge_sentiment_counts2 <- merge(merge_sentiment_counts1, count_UNGDsentiment_afinn, by = c('MergeCountry','Year'), all=TRUE)
head(merge_sentiment_counts2)
##nrc
head(count_UNGDsentiment_nrc)
colnames(count_UNGDsentiment_nrc)[colnames(count_UNGDsentiment_nrc)=="method"] <- "method_nrc"
colnames(count_UNGDsentiment_nrc)[colnames(count_UNGDsentiment_nrc)=="n"] <- "n_nrc"
colnames(count_UNGDsentiment_nrc)[colnames(count_UNGDsentiment_nrc)=="sentiment"] <- "sentiment_nrc"
merge_sentiment_all <- merge(merge_sentiment_counts2, count_UNGDsentiment_nrc, by = c('MergeCountry','Year'), all=TRUE)
head(merge_sentiment_all)
summary(merge_sentiment_all$PTS_S_var)
ggplot(merge_sentiment_counts1, aes(x=as.numeric(PTS_S_var), y=n_bing))+
geom_jitter(color="red")+
theme_minimal()+
ylab("Frequency of Sentiment Words in UN speeches")+
xlab("Change in PTS")
#the count of sentiments (both negative and positive) or emotional speech becomes less frequent
ggplot(merge_sentiment_all, aes(x=as.numeric(PTS_S_var), y=value_afinn))+
geom_line(color="red")+
theme_minimal()+
ylab("Value of Sentiment Words in UN speeches")+
xlab("Change in PTS")
#the sentiment value becomes more negative when PTS changes positively
head(merge_sentiment_counts1)
merge_sentiment_all$PTS_S_dummy <- factor(merge_sentiment_all$PTS_S)
is.factor(merge_sentiment_all$PTS_S_dummy)
merge_sentiment_all$PTS_A_dummy <- factor(merge_sentiment_all$PTS_A)
is.factor(merge_sentiment_all$PTS_A_dummy)
merge_sentiment_all$PTS_H_dummy <- factor(merge_sentiment_all$PTS_H)
is.factor(merge_sentiment_all$PTS_H_dummy)
Modelbing_S <- plm (n_bing ~ PTS_S_dummy + PTS_S_var + PTS_S_dummy*PTS_S_var, data = merge_sentiment_all, effect = "twoways", model = "within")
ggplot(merge_sentiment_counts2, aes(x=as.numeric(PTS_S_var), y=value_afinn))+
geom_line(color="red")+
theme_minimal()+
ylab("Value of Sentiment Words in UN speeches")+
xlab("Change in PTS")
Modelbing_S <- plm (n_bing ~ PTS_S_dummy + PTS_S_var + PTS_S_dummy*PTS_S_var, data = merge_sentiment_counts1, effect = "twoways", model = "within")
table(merge_sentiment_counts1$MergeCountry, merge_sentiment_counts1$Year)>1
head(merge_sentiment_counts1)
head(count_UNGDsentiment_bing)
Modelbing_S <- plm (n_bing ~ PTS_S_dummy + PTS_S_var + PTS_S_dummy*PTS_S_var, data = subset(merge_sentiment_counts1, sentiment_bing == "positive"), effect = "twoways", model = "within")
table(merge_sentiment_counts1$MergeCountry, merge_sentiment_counts1$Year, merge_sentiment_counts1$sentiment_bing)>1
any(table(merge_sentiment_counts1$MergeCountry, merge_sentiment_counts1$Year, merge_sentiment_counts1$sentiment_bing) !=1)
table(merge_sentiment_counts1$MergeCountry, merge_sentiment_counts1$Year, merge_sentiment_counts1$sentiment_bing)>1
table(merge_sentiment_counts1$MergeCountry, merge_sentiment_counts1$Year, merge_sentiment_counts1$sentiment_bing)>2
table(subset(merge_sentiment_counts1$MergeCountry, merge_sentiment_counts1$Year, merge_sentiment_counts1$sentiment_bing))>1
Modelbing_S <- plm (n_bing ~ PTS_S_dummy + PTS_S_var + PTS_S_dummy*PTS_S_var, data = subset(merge_sentiment_counts1, sentiment_bing == "positive"), effect = "twoways", model = "within")
screenreg(Modelbing_S)
merge_sentiment_counts1[duplicated(merge_sentiment_counts1)]
#search for duplicates
any(merge_sentiment_counts1[duplicated(merge_sentiment_counts1)])
Modelbing_A <- plm (n_bing ~ PTS_A_dummy + PTS_A_var + PTS_A_dummy*PTS_A_var, data = subset(merge_sentiment_counts1, sentiment_bing == "positive"), effect = "twoways", model = "within")
screenreg(Modelbing_A)
Modelbing_H <- plm (n_bing ~ PTS_H_dummy + PTS_H_var + PTS_H_dummy*PTS_H_var, data = subset(merge_sentiment_counts1, sentiment_bing == "positive"), effect = "twoways", model = "within")
screenreg(Modelbing_H)
###negative bing
Modelbing_S <- plm (n_bing ~ PTS_S_dummy + PTS_S_var + PTS_S_dummy*PTS_S_var, data = subset(merge_sentiment_counts1, sentiment_bing == "negative"), effect = "twoways", model = "within")
screenreg(Modelbing_S)
###positive bing
Modelbing_S <- plm (n_bing ~ PTS_S_dummy + PTS_S_var + PTS_S_dummy*PTS_S_var, data = subset(merge_sentiment_counts1, sentiment_bing == "positive"), effect = "twoways", model = "within")
###positive bing
Modelbing_S_pos <- plm (n_bing ~ PTS_S_dummy + PTS_S_var + PTS_S_dummy*PTS_S_var, data = subset(merge_sentiment_counts1, sentiment_bing == "positive"), effect = "twoways", model = "within")
screenreg(Modelbing_S_pos)
Modelbing_A_pos <- plm (n_bing ~ PTS_A_dummy + PTS_A_var + PTS_A_dummy*PTS_A_var, data = subset(merge_sentiment_counts1, sentiment_bing == "positive"), effect = "twoways", model = "within")
screenreg(Modelbing_A_pos)
###negative bing
Modelbing_S_neg <- plm (n_bing ~ PTS_S_dummy + PTS_S_var + PTS_S_dummy*PTS_S_var, data = subset(merge_sentiment_counts1, sentiment_bing == "negative"), effect = "twoways", model = "within")
screenreg(Modelbing_S_neg)
Modelbing_A_neg <- plm (n_bing ~ PTS_A_dummy + PTS_A_var + PTS_A_dummy*PTS_A_var, data = subset(merge_sentiment_counts1, sentiment_bing == "negative"), effect = "twoways", model = "within")
screenreg(Modelbing_A_neg)
head(merge_sentiment_counts2)
merge_sentiment_counts2 <- merge(merge_HRdict_counts, count_UNGDsentiment_afinn, by = c('MergeCountry','Year'), all=TRUE)
head(merge_sentiment_counts2)
head(merge_sentiment_counts2)
head(merge_sentiment_counts2,20)
Modelafinn_S <- plm (value_afinn ~ PTS_S_dummy + PTS_S_var + PTS_S_dummy*PTS_S_var, data = merge_sentiment_counts2, effect = "twoways", model = "within")
head(merge_sentiment_counts2,20)
##afinn
count_UNGDsentiment_afinn <- sent_words_lim %>%
inner_join(get_sentiments("afinn")) %>%
group_by(MergeCountry, Year) %>%
count (Year, MergeCountry, value) %>%
mutate(method = "AFINN")
count_UNGDsentiment_afinn
##afinn
count_UNGDsentiment_afinn <- sent_words_lim %>%
inner_join(get_sentiments("afinn")) %>%
group_by(MergeCountry, Year) %>%
count (Year, MergeCountry, value) %>%
summarise(sentiment = sum(value)) %>%
mutate(method = "AFINN")
count_UNGDsentiment_afinn
##afinn
count_UNGDsentiment_afinn <- sent_words_lim %>%
inner_join(get_sentiments("afinn")) %>%
group_by(MergeCountry, Year) %>%
count (Year, MergeCountry) %>%
summarise(sentiment = sum(value)) %>%
mutate(method = "AFINN")
##afinn
count_UNGDsentiment_afinn <- sent_words_lim %>%
inner_join(get_sentiments("afinn")) %>%
group_by(MergeCountry, Year) %>%
count (Year, MergeCountry, value) %>%
summarise(sentiment = sum(value)) %>%
mutate(method = "AFINN")
##afinn
count_UNGDsentiment_afinn <- sent_words_lim %>%
inner_join(get_sentiments("afinn")) %>%
group_by(MergeCountry, Year) %>%
count (Year, MergeCountry, value) %>%
mutate(method = "AFINN")
count_UNGDsentiment_afinn
##afinn
count_UNGDsentiment_afinn <- sent_words_lim %>%
inner_join(get_sentiments("afinn")) %>%
group_by(MergeCountry, Year) %>%
count (Year, MergeCountry, value) %>%
summarise(sentiment = sum(value)) %>%
mutate(method = "AFINN")
count_UNGDsentiment_afinn
##afinn
count_UNGDsentiment_afinn <- sent_words_lim %>%
inner_join(get_sentiments("afinn")) %>%
group_by(MergeCountry, Year) %>%
summarise(sentiment = sum(value)) %>%
mutate(method = "AFINN")
count_UNGDsentiment_afinn
?summarise
?sum
?summarise
##afinn
count_UNGDsentiment_afinn <- sent_words_lim %>%
inner_join(get_sentiments("afinn")) %>%
group_by(MergeCountry, Year) %>%
count (Year, MergeCountry, value) %>%
summarise(sentiment = mean(value)) %>%
mutate(method = "AFINN")
count_UNGDsentiment_afinn
count_UNGDsentiment_afinn <- sent_words_lim %>%
inner_join(get_sentiments("afinn")) %>%
group_by(MergeCountry, Year) %>%
count (Year, MergeCountry, value) %>%
summarise(sentiment = sum(value)) %>%
mutate(method = "AFINN")
count_UNGDsentiment_afinn
count_UNGDsentiment_afinn <- sent_words_lim %>%
inner_join(get_sentiments("afinn")) %>%
group_by(MergeCountry, Year) %>%
summarise(sentiment = sum(value)) %>%
mutate(method = "AFINN")
count_UNGDsentiment_afinn
count_UNGDsentiment_afinn <- sent_words_lim %>%
inner_join(get_sentiments("afinn")) %>%
group_by(MergeCountry, Year) %>%
mutate(method = "AFINN")
count_UNGDsentiment_afinn
count_UNGDsentiment_afinn <- sent_words_lim %>%
inner_join(get_sentiments("afinn")) %>%
count (Year, MergeCountry, value) %>%
group_by(MergeCountry, Year) %>%
mutate(method = "AFINN")
count_UNGDsentiment_afinn
##afinn
count_UNGDsentiment_afinn <- sent_words_lim %>%
inner_join(get_sentiments("afinn")) %>%
group_by(MergeCountry, Year) %>%
summarise(sentiment = mean(value)) %>%
mutate(method = "AFINN")
count_UNGDsentiment_afinn
count_UNGDsentiment_afinn <- sent_words_lim %>%
inner_join(get_sentiments("afinn")) %>%
group_by(MergeCountry, Year) %>%
mutate(method = "AFINN")
count_UNGDsentiment_afinn
count_UNGDsentiment_afinn <- sent_words_lim %>%
inner_join(get_sentiments("afinn")) %>%
group_by(MergeCountry, Year) %>%
count(value) %>%
mutate(method = "AFINN")
count_UNGDsentiment_afinn
mean(cound_UNGDsentiment_afinn$value)
count_UNGDsentiment_afinn
mean(subset(count_UNGDsentiment_afinn$value, MergeCountry == "AFG", Year == "1976" ))
mean(subset(count_UNGDsentiment_afinn$value, count_UNGDsentiment_afinn$MergeCountry == "AFG", count_UNGDsentiment_afinn$Year == "1976" ))
##afinn
count_UNGDsentiment_afinn <- sent_words_lim %>%
inner_join(get_sentiments("afinn")) %>%
group_by(MergeCountry, Year) %>%
summarise(sentiment = mean(value)) %>%
mutate(method = "AFINN")
count_UNGDsentiment_afinn
##afinn
count_UNGDsentiment_afinn <- sent_words_lim %>%
inner_join(get_sentiments("afinn")) %>%
group_by(MergeCountry, Year) %>%
summarise(sentiment = mean(value)) %>%
mutate(method = "AFINN")
count_UNGDsentiment_afinn
mean(subset(count_UNGDsentiment_afinn$value, count_UNGDsentiment_afinn$MergeCountry == "AFG", count_UNGDsentiment_afinn$Year == "1976" ))
##afinn
head(count_UNGDsentiment_afinn)
colnames(count_UNGDsentiment_afinn)[colnames(count_UNGDsentiment_afinn)=="method"] <- "method_afinn"
colnames(count_UNGDsentiment_afinn)[colnames(count_UNGDsentiment_afinn)=="n"] <- "n_afinn"
colnames(count_UNGDsentiment_afinn)[colnames(count_UNGDsentiment_afinn)=="sentiment"] <- "sentiment_afinn"
merge_sentiment_counts2 <- merge(merge_HRdict_counts, count_UNGDsentiment_afinn, by = c('MergeCountry','Year'), all=TRUE)
head(merge_sentiment_counts2)
head(merge_sentiment_counts2,20)
summary(merge_sentiment_counts2$sentiment_afinn)
Modelafinn_S <- plm (sentiment_afinn ~ PTS_S_dummy + PTS_S_var + PTS_S_dummy*PTS_S_var, data = merge_sentiment_counts2, effect = "twoways", model = "within")
screenreg(Modelafinn_S)
Modelafinn_A <- plm (sentiment_afinn ~ PTS_A_dummy + PTS_A_var + PTS_A_dummy*PTS_A_var, data = merge_sentiment_counts2, effect = "twoways", model = "within")
screenreg(Modelafinn_A)
merge_sentiment_all <- merge(merge_HRdict_counts, count_UNGDsentiment_nrc, by = c('MergeCountry','Year'), all=TRUE)
head(merge_sentiment_all)
head(merge_sentiment_all, 20)
Modelnrc_S <- plm (n_nrc ~ PTS_S_dummy + PTS_S_var + PTS_S_dummy*PTS_S_var, data = subset(merge_sentiment_all, sentiment_nrc == "anger"), effect = "twoways", model = "within")
screenreg(Modelafinn_S)
Modelnrc_A <- plm (n_nrc ~ PTS_A_dummy + PTS_A_var + PTS_A_dummy*PTS_A_var, data = subset(merge_sentiment_all, sentiment_nrc == "anger"), effect = "twoways", model = "within")
screenreg(Modelafinn_A)
screenreg(Modelnrc_S)
Modelnrc_A <- plm (n_nrc ~ PTS_A_dummy + PTS_A_var + PTS_A_dummy*PTS_A_var, data = subset(merge_sentiment_all, sentiment_nrc == "anger"), effect = "twoways", model = "within")
Modelnrc_A <- plm (n_nrc ~ PTS_A_dummy + PTS_A_var + PTS_A_dummy*PTS_A_var, data = subset(merge_sentiment_all, sentiment_nrc == "anger"), effect = "twoways", model = "within")
screenreg(Modelnrc_A)
head(merge_sentiment_all, 20)
Modelnrc_S <- plm (n_nrc ~ PTS_S_dummy + PTS_S_var + PTS_S_dummy*PTS_S_var, data = subset(merge_sentiment_all, sentiment_nrc == "disgust"), effect = "twoways", model = "within")
Modelnrc_S <- plm (n_nrc ~ PTS_S_dummy + PTS_S_var + PTS_S_dummy*PTS_S_var, data = subset(merge_sentiment_all, sentiment_nrc == "anger"), effect = "twoways", model = "within")
Modelnrc_S_disgust <- plm (n_nrc ~ PTS_S_dummy + PTS_S_var + PTS_S_dummy*PTS_S_var, data = subset(merge_sentiment_all, sentiment_nrc == "disgust"), effect = "twoways", model = "within")
screenreg(Modelnrc_S_disgust)
head(merge_sentiment_all, 20)
head(merge_sentiment_all$sentiment_nrc, 20)
Modelnrc_S_sadness <- plm (n_nrc ~ PTS_S_dummy + PTS_S_var + PTS_S_dummy*PTS_S_var, data = subset(merge_sentiment_all, sentiment_nrc == "sadness"), effect = "twoways", model = "within")
screenreg(Modelnrc_S_sadness)
